<?xml version="1.0" encoding="UTF-8" ?>
<project name="MongoDb" id="Project-83c" database="MongoDb" >
	<schema name="Restaurant" >
		<table name="restaurante" >
			<column name="_id" type="oid" length="800" decimal="0" jt="-8" mandatory="y" />
			<column name="address" type="object" length="800" decimal="0" jt="4999544" mandatory="y" >
				<column name="building" type="string" length="800" decimal="0" jt="12" mandatory="y" />
				<column name="coord" type="array" length="800" decimal="0" jt="4999545" mandatory="y" />
				<column name="street" type="string" length="800" decimal="0" jt="12" mandatory="y" />
				<column name="zipcode" type="string" length="800" decimal="0" jt="12" mandatory="y" />
			</column>
			<column name="borough" type="string" length="800" decimal="0" jt="12" mandatory="y" />
			<column name="cuisine" type="string" length="800" decimal="0" jt="12" mandatory="y" />
			<column name="grades" type="array[object]" length="800" decimal="0" jt="4999545" mandatory="y" >
				<column name="date" type="date" length="800" decimal="0" jt="91" mandatory="y" />
				<column name="grade" type="string" length="800" decimal="0" jt="12" mandatory="y" />
				<column name="score" type="int" length="800" decimal="0" jt="4" mandatory="y" />
			</column>
			<column name="name" type="string" length="800" decimal="0" jt="12" mandatory="y" />
			<column name="restaurant_id" type="string" length="800" decimal="0" jt="12" mandatory="y" />
			<index name="_id_" unique="PRIMARY_KEY" >
				<column name="_id" />
			</index>
		</table>
	</schema>
	<connector name="MongoDb" database="MongoDb" driver_class="com.dbschema.MongoJdbcDriver" driver_jar="mongojdbc3.1.jar" driver_desc="No Authentication" host="localhost" port="27017" instance="Restaurant" user="admin" />
	<layout name="Main Layout" id="Layout-42a" show_column_type="y" show_relation="name" >
		<entity schema="Restaurant" name="restaurante" column="address" color="3986C1" x="288" y="240" />
		<entity schema="Restaurant" name="restaurante" column="grades" color="3986C1" x="336" y="96" />
		<entity schema="Restaurant" name="restaurante" color="3986C1" x="48" y="48" />
		<callout x="512" y="112" pointer="Round" >
			<comment><![CDATA[Double-click collection headers or fields to edit.
Create multiple layouts (diagrams) with the same or different collections. 
Saving the model to file will save also the layouts.]]></comment>
		</callout>
		<script name="Query" id="Editor-8be" language="SQL" >
			<string><![CDATA[/*Escriu una consulta per mostrar tots els documents en la col·lecció Restaurants*/
db.restaurante.find()

/*Escriu una consulta per mostrar el restaurant_id, name, borough i cuisine per tots els documents en la col·lecció Restaurants*/
db.restaurante.find({},{"restaurant_id":1,"name":1,"borough":1,"cuisine":1})

/*Escriu una consulta per mostrar el restaurant_id, name, borough i cuisine, però excloure el camp _id per tots els documents en la col·lecció Restaurants*/
db.restaurante.find({},{"_id":"","restaurant_id":1,"name":1,"borough":1,"cuisine":1})

/*Escriu una consulta per mostrar restaurant_id, name, borough i zip code, però excloure el camp _id per tots els documents en la col·lecció Restaurants*/
db.restaurante.find({},{"_id":"","restaurant_id":1,"name":1,"borough":1,"address":{"zipcode":1}})

/*Escriu una consulta per mostrar tot els restaurants que estan en el Bronx*/
db.restaurante.find({},{"_id":"","restaurant_id":1,"name":1,"borough":"bronx"})

/*Escriu una consulta per mostrar els primers 5 restaurants que estan en el Bronx*/
db.restaurante.find({},{"_id":"","restaurant_id":1,"name":1,"borough":"bronx"}).limit(5)

/*Escriu una consulta per mostrar el pròxim 5 restaurants després de saltar els primers 5 del Bronx*/
db.restaurante.find({},{"_id":"","restaurant_id":1,"name":1,"borough":"bronx"}).skip(5).limit(5)

/*Escriu una consulta per trobar els restaurants que tenen un score de més de 90*/
db.restaurante.find({"grades.score":{$gt:90}},{"_id":"","restaurant_id":1,"name":1})

/*Escriu una consulta per trobar els restaurants que tenen un score de més que 80 però menys que 100*/
db.restaurante.find({$and:[{"grades.score":{$gt:80}},{"grades.score":{$lt:100}}]},{})

/*Escriu una consulta per trobar els restaurants quins localitzen en valor de latitud menys que -95.754168*/
db.restaurante.find({"address.coord.0":{"$lt":-95.754168}})

/*Escriu una consulta  per a trobar els restaurants que no preparen cap cuisine de 'American' i el seu puntaje de qualificació superior a 70 i latitud inferior a -65.754168*/
db.restaurante.find({$and:[
					{"cuisine":{$ne:"American "}},
					{"grades.score":{$gt:70}},
					{"address.coord.0":{$lt:-65.754168}}
					]},{})

/*Escriu una consulta per trobar els restaurants quins no preparen cap cuisine de 'American' i va aconseguir un marcador més que 70 
i localitzat en la longitud menys que -65.754168. Nota : Fes aquesta consulta sense utilitzar $and operador*/
db.restaurante.find({
					"cuisine":{$ne:"American "},
					"grades.score":{$gt:70},
					"address.coord.0":{$lt:-65.754168}}
					,{})

/*Escriu una consulta per trobar els restaurants quins no preparen cap cuisine de 'American ' i va aconseguir un punt de grau 'A' no pertany a Brooklyn. 
S'ha de mostrar el document segons la cuisine en ordre descendent*/
db.restaurante.find({
					"cuisine":{$ne:"American "},
					"grades.grade":{$eq:"A"},
					"borough":{$ne:"Brooklyn"}}
					,{}).sort({"cuisine":-1})

/*Escriu una consulta per trobar el restaurant_id, name, borough i cuisine per a aquells restaurants quin contenir 'Wil' com les tres primeres lletres en el seu nom*/
db.restaurante.find({"name":{$regex:"^Wil"}},{"_id":"","restaurant_id":1,"name":1,"borough":1,"cuisine":1})

/*Escriu una consulta per trobar el restaurant_id, name, borough i cuisine per a aquells restaurants quin contenir 'ces' com les últim tres lletres en el seu nom*/
db.restaurante.find({"name":{$regex:"ces$"}},{"_id":1,"restaurant_id":1,"name":1,"borough":1,"cuisine":1})

Escriu una consulta per trobar el restaurant_id, name, borough i cuisine per a aquells restaurants quin contenir 'Reg' com tres lletres en algun lloc en el seu nom
db.restaurante.find({$or:[{"cuisine":"american"},{"cuisine":"chinese"}]},{"_id":"","restaurant_id":1,"name":1,"borough":1,"cuisine":1}) /*incorrecto*/

Escriu una consulta per trobar els restaurants quins pertanyen al Bronx i va preparar qualsevol plat American o xinès
db.restaurante.find({"borough":"Bronx",cuisine:{$in:["American","Chinese"]}}) /*Esta esta mal, me devuelvo solo los chinos!*/

Escriu una consulta per trobar el restaurant_id, name, borough i cuisine per a aquells restaurants que pertanyen a Staten Island o Queens o Bronxor Brooklyn
db.restaurante.find({"borough":{$in:["Staten Island","Queens","Bronx","Brooklyn"]}},{"_id":"","restaurant_id":1,"name":1,"borough":1,"cuisine":1})

Escriu una consulta per trobar el restaurant_id, name, borough i cuisine per a aquells restaurants que no pertanyen a Staten Island o Queens o Bronxor Brooklyn
db.restaurante.find({"borough":{$nin:["Staten Island","Queens","Bronx","Brooklyn"]}},{"_id":"","restaurant_id":1,"name":1,"borough":1,"cuisine":1})

Escriu una consulta per trobar el restaurant_id, name, borough i cuisine per a aquells restaurants que aconsegueixin un marcador quin no és més que 10
db.restaurante.find({"grades.score":{$lte:10}},{"_id":"","restaurant_id":1,"name":1,"borough":1,"cuisine":1})

Escriu una consulta per trobar el restaurant_id, name, borough i cuisine per a aquells restaurants que preparen peix excepte 'American' i 'Chinees' o el name del restaurant comença amb lletres 'Wil'
db.restaurante.find({$or:[{"cuisine":{$nin:["american","chinese"]}},{"name":{$in:["^Wil"]}},{"cuisine":{$eq:"seafood"}}]}, {"_id":"","restaurant_id":1,"name":1,"borough":1,"cuisine":1}) /*mal, no coincide*/

Escriu una consulta per trobar el restaurant_id, name, i grades per a aquells restaurants que aconsegueixin un grau "A" i un score 11 en dades d'estudi ISODate "2014-08-11T00:00:00Z"
db.restaurante.find({
					$and:[
						{"grades.grade":"A"},
						{"grades.score":11},
						{"grades.date":ISODate("2014-08-11T00:00:00Z")}
						]},
						{"_id":"","restaurant_id":1,"name":1,"grades":1})

Escriu una consulta per trobar el restaurant_id, name i grades per a aquells restaurants on el 2n element de varietat de graus conté un grau de "A" i marcador 9 sobre un ISODate "2014-08-11T00:00:00Z"
db.restaurante.find({
					$and:[
						{"grades.grade.1":"A"},
						{"grades.score.1":9},
						{"grades.date.1":ISODate("2014-08-11T00:00:00Z")}
						]},
						{"_id":"","restaurant_id":1,"name":1,"grades":1})

Escriu una consulta per trobar el restaurant_id, name, adreça i ubicació geogràfica per a aquells restaurants on el segon element del array coord conté un valor quin és més que 42 i fins a 52
db.restaurante.find({"address.coord.1":{$gt:42,$lt:52}},
					{"_id":"","restaurant_id":1,"name":1,"adress.street":1,"coord":1})

Escriu una consulta per organitzar el nom dels restaurants en ordre ascendent juntament amb totes les columnes
db.restaurante.find().sort({"name":1})

Escriu una consulta per organitzar el nom dels restaurants en descendir juntament amb totes les columnes
db.restaurante.find().sort({"name":-1})

Escriu una consulta a organitzar el nom de la cuisine en ordre ascendent i per el mateix barri de cuisine. Ordre descendint
db.restaurante.find().sort({"cuisine":1,"borough":-1})

Escriu una consulta per saber tant si totes les direccions contenen el carrer o no
db.restaurante.find({"address.street":null})

Escriu una consulta quin seleccionarà tots el documents en la col·lecció de restaurants on el valor del camp coord és Double
db.restaurante.find({"address.coord":{$type:"double"}})

Escriu una consulta quin seleccionarà el restaurant_id, name i grade per a aquells restaurants quins retorns 0 com a resta després de dividir el marcador per 7
db.restaurante.find({"grades.score":{$mod:[7,0]}},
						{"_id":"","restaurant_id":1,"name":1,"grades":1})

Escriu una consulta per trobar el name de restaurant, borough, longitud i altitud i cuisine per a aquells restaurants que contenen 'mon' com tres lletres en algun lloc del seu name
db.restaurante.find({"name":{$regex:"mon"}},{"_id":"","restaurant_id":1,"name":1,"borough":1,"address.coord.0":1,"address.coord.1":1,"cuisine":1}) /*esta query está mal hasta en la solución!!!*/

Escriu una consulta per trobar el name de restaurant, borough, longitud i latitud i cuisine per a aquells restaurants que conteinen 'Mad' com primeres tres lletres del seu name
db.restaurante.find({"name":{$regex:"^Mad"}},{"_id":"","restaurant_id":1,"name":1,"borough":1,"address.coord":1,"cuisine":1})]]></string>
		</script>
	</layout>
	<layout name="~Layout with Tools" id="Layout-4cb" show_column_type="y" show_relation="name" >
		<entity schema="Restaurant" name="restaurante" column="address" color="BED3F4" x="256" y="80" />
		<entity schema="Restaurant" name="restaurante" column="grades" color="BED3F4" x="256" y="208" />
		<entity schema="Restaurant" name="restaurante" color="BED3F4" x="48" y="80" />
		<group name="restaurante" color="ECF0F7" >
			<entity schema="Restaurant" name="restaurante" />
			<entity schema="Restaurant" name="restaurante" column="address" />
			<entity schema="Restaurant" name="restaurante" column="grades" />
		</group>
		<script name="Sample Query Editor" id="Editor-67c" language="SQL" >
			<string><![CDATA[Restaurant.restaurante.find()

//OR

USE Restaurant;
db.restaurante.find()

//OR

USE Restaurant;
db.getCollection('restaurante').find()]]></string>
		</script>
		<browser id="Browse-6a0" name="Sample Relational Data Explorer" confirm_updates="y" >
			<browse_table schema="Restaurant" entity="restaurante" x="20" y="20" width="400" height="300" record_view="y" />
		</browser>
		<query id="Query-1bc5" name="Sample Query Builder" >
			<query_table schema="Restaurant" name="restaurante" alias="restaurante" x="48" y="48" >
				<column name="_id" />
				<column name="address" />
				<column name="borough" />
				<column name="cuisine" />
				<column name="grades" />
				<column name="name" />
				<column name="restaurant_id" />
			</query_table>
		</query>
	</layout>
</project>